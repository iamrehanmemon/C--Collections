C# Collections

1) Introducing Collections and Arrays

Collections -> Collections are types that are designed to encapsulate a set of related objects together so that you can treat them as one single collection object on which you can then perform operations such as searching

Overview of Collections, Arrays and its properties, Enumerating and aceesing elements of Array. Accessing element of an array , enumerate using the foreach array, the 0-based indexing, the seamless integration with a debugger


2) Importing from a Data Source into an Array

Importing data from an external source (CSV) into the array, initializing array with variable size, Array is full of Null/default values, Splitting the content from a single line into different arrays & Formatting large numbers

3) Resizing Collections with Lists
List can be used when the size of data as it can be resized.List<string> daysOfWeek = new List<string>.Input from csv,Splitting to array & adding to the list .Add(value), Counting element with List is Count whereas in array is Length.Appending item into list, insertion in list -> .Insert .Searching into List FindIndex .Removing from a List -> RemoveAt(index)

List can be used when there is uncertainity about the size of data as it can be resized.List<string> daysOfWeek = new List<string>.Splitting the content from a single line into different array based on the input from csv & adding to the list, Counting element with List is Count whereas in array is Length.Adding into list is by appending item into list also insertion can be done in list such as .Insert .Searching into List via various method such FindIndex .Removing from a List with RemoveAt(index)


4)Storing Keyed Data with Dictionaries

Searching requires an index in List & Arry.
Dictionaries Syntax -> Dictionary<string, Country> countries = new Dictionary<string, Country>();
Adding items to Dictionary country.Add(key, country). Has Remove & Replace method.Doesnt have Insert Method.
Looking Up Item -> countries[key] but its index in array,list
Enumerating Dictionary using key(.key) value(.Value) pairs also Keys should be unique
.TryGetValue for looking up if it exist or not in dictionary


Dictionaries Syntax Adding items to Dictionary country.Add(key, country). Has Remove & Replace method.Doesnt have Insert Method.Looking Up Item -> countries[key] but its index in array,list.Enumerating Dictionary using key(.key) value(.Value) pairs also Keys should be unique.  .TryGetValue for looking up if it exist or not in dictionary


5)Manipulating List Data
Differnce between for loop vs ForEach -> IS ReadOnly.for loop -> Finer Control for list & Array as number Range is involved. Iterating only some Values.Batching an iteration based on user input, Enumerating Backwards using Control condition.

6)Selecting Items Using LINQ 

LINQ - allows to query -> Extract the data you want -> ReadOnly/Doesnt modify -> Doesnt support Batching.Link Query Syntax -> such as SQL.Limiting results in foreach using .Take(10).Sort-> .OrderBy(x=>x.Name) requires delegate/lamda Function.Chaining Method in LINQ requires some logical order. Working Of Link passes Data after processing it.Linq cant remove but filter the items in foreach loop.

7) Creating Collections of Collections
Partioning data from csv into region with the help of dictionary & list. Enumerating it based on key values. Differnce between Jagged & Multidimensional Array.Array of Array is called as Jagged Array.The Nought & Crosses Game Intiating and Logic building.Multi-dimensional Arry is Single with two indexes.


8) Taking Collections Further
Standard Generic Collection -> List,Dictionary,linked list. Immutable Collection->ImmutableArray,ImmutableList,ImmutableDictionary. Overview of Linq Collection, Interfaces.

